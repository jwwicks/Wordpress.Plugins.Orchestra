<?php
/*
Plugin Name: {{ pluginName }}
Description: Plugin description
Version: 0.1
Author: Your Name
*/

namespace {{ pluginNamespace }};

if(!class_exists('\Orchestra\Plugin')){
    $loader = require (dirname(dirname(dirname(__FILE__))).'/vendors/orchestra/autoload.php');
    $loader->add('Orchestra\\', dirname(dirname(__FILE__)).'/orchestra/src/');
}

class Plugin extends \Orchestra\Plugin
{
    static public function install()
    {
      parent::install();

      global $wpdb;

      $wpdb->query("CREATE TABLE IF NOT EXISTS `".$wpdb->prefix."{{ pluginNamespace|lower }}_persons` (`id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(255) COLLATE utf8_unicode_ci NOT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci");
    }

    static public function update()
    {
      parent::update(
        array(
          2 => function(){
            // Update routine for version 2
          },
          3 => function(){
            // Update routine for version 3
          }
        )
      );
    }
}

add_action('admin_menu', function() {
    new Plugin(__NAMESPACE__, __DIR__, '{{ pluginName }}', 1);
});

// AJAX
add_action('wp_ajax_{{ pluginNamespace|lower }}', '\{{ pluginNamespace }}\Plugin::ajaxCallback');

// Check that Orchestra is active on activation
register_activation_hook(__FILE__, function(){
    if(!is_plugin_active('orchestra/orchestra.php')) {
        die('Orchestra must be activated before you can use this plugin');
    }
});

// Install & Update
register_activation_hook(__FILE__, '\{{ pluginNamespace }}\Plugin::install');
add_action('plugins_loaded', '\{{ pluginNamespace }}\Plugin::update');